//
//  GnomesViewController.swift
//  altranassessment
//
//  Created by Marcos Molero on 30/09/2018.
//  Copyright (c) 2018 Marcos Molero. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates

import UIKit

protocol GnomesDisplayLogic: class {
    func displayGnomes(viewModel: GnomesScene.GetGnomesFromDataStore.ViewModel)
}

class GnomesViewController: UIViewController, GnomesDisplayLogic {
    
    var interactor: GnomesBusinessLogic?
    var router: (GnomesRoutingLogic & GnomesDataPassing)?
    var dependencyInjector:SceneDependencyInjector! = GnomesDependencyInjector()
    
    // MARK: Object lifecycle
    @IBOutlet weak var gnomesTableView: UITableView!
    
    let searchController = UISearchController(searchResultsController: nil)
    var displayGnomes: [GnomesScene.GetGnomesFromDataStore.DisplayGnomes] = []
    var filterGnomes: [GnomesScene.GetGnomesFromDataStore.DisplayGnomes] = []
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        dependencyInjector.inject(to:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigationController()
        setupSearchController()
        getGnomesFromDataStore()
    }
    
    func setupNavigationController() {
        navigationItem.hidesBackButton = true
    }
    
    func setupSearchController() {
        searchController.searchResultsUpdater = self
        searchController.dimsBackgroundDuringPresentation = false
        searchController.obscuresBackgroundDuringPresentation = false
        searchController.searchBar.placeholder = "Search a gnome name"
        definesPresentationContext = true
        navigationItem.searchController = searchController
    }
    
    // MARK: Requests
    func getGnomesFromDataStore() {
        let request = GnomesScene.GetGnomesFromDataStore.Request()
        interactor?.getGnomesFromDataStore(request: request)
    }
    
    // MARK: Display logic
    func displayGnomes(viewModel: GnomesScene.GetGnomesFromDataStore.ViewModel) {
        self.displayGnomes = viewModel.displayGnomes
        hideHUD()
    }
}

extension GnomesViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}

