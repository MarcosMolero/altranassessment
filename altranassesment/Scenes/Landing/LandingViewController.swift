//
//  LandingViewController.swift
//  altranassessment
//
//  Created by Marcos Molero on 23/6/18.
//  Copyright (c) 2018 Marcos Molero. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates

import UIKit

protocol LandingDisplayLogic: class {
    func displaySuccess(viewModel: LandingScene.GetGnomes.ViewModel)
    func displayFailure(viewModel: LandingScene.GetGnomes.ViewModel)
}

class LandingViewController: UIViewController, LandingDisplayLogic {
    
    var interactor: LandingBusinessLogic?
    var router: (LandingRoutingLogic & LandingDataPassing)?
    var dependencyInjector:SceneDependencyInjector! = LandingDependencyInjector()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        dependencyInjector.inject(to:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        showHUD()
        getGnomes()
    }
    
    // MARK: Requests
    func getGnomes() {
        let request = LandingScene.GetGnomes.Request()
        interactor?.getGnomes(request: request)
    }
    
    // MARK: Display logic
    func displaySuccess(viewModel: LandingScene.GetGnomes.ViewModel) {
        DispatchQueue.main.async {
            self.router?.routeToGnomes()
        }
    }
    
    func displayFailure(viewModel: LandingScene.GetGnomes.ViewModel) {
        hideHUD()
        alertConnectionError()
    }
    
    
    func alertConnectionError() {
        let alertController = UIAlertController(    title: "Error",
                                                    message: "Connection failiure",
                                                    preferredStyle: .alert)
        alertController.popoverPresentationController?.sourceView = self.view
        
        let okAction = UIAlertAction(title: "Retry", style: .default) { (action) in
            self.getGnomes()
            self.showHUD()
        }
        
        alertController.addAction(okAction)
        self.present(alertController, animated: true) { }
    }
    
}

extension LandingViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
